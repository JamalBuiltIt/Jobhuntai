{"ast":null,"code":"// pages/api/generateResume.js\nimport { Configuration, OpenAIApi } from \"openai\";\nexport default async function handler(req, res) {\n  if (req.method !== \"POST\") {\n    return res.status(405).json({\n      error: \"Method Not Allowed\"\n    });\n  }\n  const {\n    name,\n    jobTitle,\n    experience,\n    education,\n    skills\n  } = req.body;\n  if (!name || !jobTitle || !experience || !education || !skills) {\n    return res.status(400).json({\n      error: \"All fields are required\"\n    });\n  }\n  const openai = new OpenAIApi(new Configuration({\n    apiKey: process.env.OPENAI_API_KEY // Securely stored in .env file\n  }));\n  const prompt = `\n    Create a professional resume for ${name}, applying for ${jobTitle}.\n    Experience: ${experience}.\n    Education: ${education}.\n    Skills: ${skills}.\n    Format it properly with sections: Summary, Experience, Education, and Skills.\n  `;\n  try {\n    const response = await openai.createCompletion({\n      model: \"gpt-4\",\n      prompt,\n      max_tokens: 500\n    });\n    const generatedResume = response.data.choices[0].text.trim();\n    return res.status(200).json({\n      resume: generatedResume\n    });\n  } catch (error) {\n    console.error(\"OpenAI API Error:\", error);\n    return res.status(500).json({\n      error: \"Failed to generate resume\"\n    });\n  }\n}","map":{"version":3,"names":["Configuration","OpenAIApi","handler","req","res","method","status","json","error","name","jobTitle","experience","education","skills","body","openai","apiKey","process","env","OPENAI_API_KEY","prompt","response","createCompletion","model","max_tokens","generatedResume","data","choices","text","trim","resume","console"],"sources":["C:/jobHunt/jobhunt/src/components/resumeGenerator.js"],"sourcesContent":["// pages/api/generateResume.js\r\nimport { Configuration, OpenAIApi } from \"openai\";\r\n\r\nexport default async function handler(req, res) {\r\n  if (req.method !== \"POST\") {\r\n    return res.status(405).json({ error: \"Method Not Allowed\" });\r\n  }\r\n\r\n  const { name, jobTitle, experience, education, skills } = req.body;\r\n\r\n  if (!name || !jobTitle || !experience || !education || !skills) {\r\n    return res.status(400).json({ error: \"All fields are required\" });\r\n  }\r\n\r\n  const openai = new OpenAIApi(\r\n    new Configuration({\r\n      apiKey: process.env.OPENAI_API_KEY, // Securely stored in .env file\r\n    })\r\n  );\r\n\r\n  const prompt = `\r\n    Create a professional resume for ${name}, applying for ${jobTitle}.\r\n    Experience: ${experience}.\r\n    Education: ${education}.\r\n    Skills: ${skills}.\r\n    Format it properly with sections: Summary, Experience, Education, and Skills.\r\n  `;\r\n\r\n  try {\r\n    const response = await openai.createCompletion({\r\n      model: \"gpt-4\",\r\n      prompt,\r\n      max_tokens: 500,\r\n    });\r\n\r\n    const generatedResume = response.data.choices[0].text.trim();\r\n    return res.status(200).json({ resume: generatedResume });\r\n  } catch (error) {\r\n    console.error(\"OpenAI API Error:\", error);\r\n    return res.status(500).json({ error: \"Failed to generate resume\" });\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA,SAASA,aAAa,EAAEC,SAAS,QAAQ,QAAQ;AAEjD,eAAe,eAAeC,OAAOA,CAACC,GAAG,EAAEC,GAAG,EAAE;EAC9C,IAAID,GAAG,CAACE,MAAM,KAAK,MAAM,EAAE;IACzB,OAAOD,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAqB,CAAC,CAAC;EAC9D;EAEA,MAAM;IAAEC,IAAI;IAAEC,QAAQ;IAAEC,UAAU;IAAEC,SAAS;IAAEC;EAAO,CAAC,GAAGV,GAAG,CAACW,IAAI;EAElE,IAAI,CAACL,IAAI,IAAI,CAACC,QAAQ,IAAI,CAACC,UAAU,IAAI,CAACC,SAAS,IAAI,CAACC,MAAM,EAAE;IAC9D,OAAOT,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAA0B,CAAC,CAAC;EACnE;EAEA,MAAMO,MAAM,GAAG,IAAId,SAAS,CAC1B,IAAID,aAAa,CAAC;IAChBgB,MAAM,EAAEC,OAAO,CAACC,GAAG,CAACC,cAAc,CAAE;EACtC,CAAC,CACH,CAAC;EAED,MAAMC,MAAM,GAAG;AACjB,uCAAuCX,IAAI,kBAAkBC,QAAQ;AACrE,kBAAkBC,UAAU;AAC5B,iBAAiBC,SAAS;AAC1B,cAAcC,MAAM;AACpB;AACA,GAAG;EAED,IAAI;IACF,MAAMQ,QAAQ,GAAG,MAAMN,MAAM,CAACO,gBAAgB,CAAC;MAC7CC,KAAK,EAAE,OAAO;MACdH,MAAM;MACNI,UAAU,EAAE;IACd,CAAC,CAAC;IAEF,MAAMC,eAAe,GAAGJ,QAAQ,CAACK,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC;IAC5D,OAAOzB,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEuB,MAAM,EAAEL;IAAgB,CAAC,CAAC;EAC1D,CAAC,CAAC,OAAOjB,KAAK,EAAE;IACduB,OAAO,CAACvB,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,OAAOJ,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAA4B,CAAC,CAAC;EACrE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}