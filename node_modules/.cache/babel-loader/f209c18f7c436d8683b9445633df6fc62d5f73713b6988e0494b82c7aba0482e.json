{"ast":null,"code":"var _jsxFileName = \"C:\\\\jobHunt\\\\jobhunt\\\\src\\\\components\\\\protectedRoute.js\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport { getAuth } from \"./components/authContext.js\"; // Correct import (no .js extension needed)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  const {\n    authUser\n  } = getAuth(); // Get the authUser from context\n\n  // If authUser exists, render the children, otherwise redirect to /login\n  return authUser ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 32\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","getAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","authUser","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/jobHunt/jobhunt/src/components/protectedRoute.js"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { getAuth } from \"./components/authContext.js\"; // Correct import (no .js extension needed)\r\n\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { authUser } = getAuth(); // Get the authUser from context\r\n\r\n  // If authUser exists, render the children, otherwise redirect to /login\r\n  return authUser ? children : <Navigate to=\"/login\" replace />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,6BAA6B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvC,MAAM;IAAEC;EAAS,CAAC,GAAGL,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,OAAOK,QAAQ,GAAGD,QAAQ,gBAAGF,OAAA,CAACH,QAAQ;IAACO,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/D,CAAC;AAACC,EAAA,GALIT,cAAc;AAOpB,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}