{"ast":null,"code":"import React,{useState}from\"react\";import{saveAs}from\"file-saver\";import\"../css/coverLetterGenerator.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CoverLetterGenerator=()=>{const[formData,setFormData]=useState({fullName:\"\",jobTitle:\"\",company:\"\",hiringManager:\"\",experience:\"\",achievements:\"\",skills:\"\",interest:\"\",valueProposition:\"\",additionalInfo:\"\"});const[loading,setLoading]=useState(false);const[coverLetter,setCoverLetter]=useState(\"\");const[error,setError]=useState(\"\");const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const generateCoverLetter=async()=>{setLoading(true);setCoverLetter(\"\");setError(\"\");try{const response=await fetch(\"http://localhost:5000/api/generateCoverLetter\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({fullName:formData.fullName,jobTitle:formData.jobTitle,company:formData.company,hiringManager:formData.hiringManager,experience:formData.experience,achievements:formData.achievements,skills:formData.skills,interest:formData.interest,valueProposition:formData.valueProposition,additionalInfo:formData.additionalInfo})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||\"Something went wrong with the request\");}const data=await response.json();setCoverLetter(data.coverLetter);}catch(err){console.error(\"Request failed:\",err);setError(err.message);}finally{setLoading(false);}};const downloadCoverLetter=()=>{if(coverLetter){const blob=new Blob([coverLetter],{type:\"text/plain;charset=utf-8\"});saveAs(blob,\"coverLetter.txt\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"cover-letter-generator-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"AI Cover Letter Generator\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[[{id:\"fullName\",label:\"Your Full Name\",placeholder:\"Enter your full name\"},{id:\"jobTitle\",label:\"Job Title\",placeholder:\"Enter the job title\"},{id:\"company\",label:\"Company Name\",placeholder:\"Enter the company name\"},{id:\"hiringManager\",label:\"Hiring Manager (Optional)\",placeholder:\"Enter hiring manager's name\"},{id:\"experience\",label:\"Relevant Work Experience\",placeholder:\"Describe your relevant experience\",textarea:true},{id:\"achievements\",label:\"Key Achievements\",placeholder:\"List your achievements\",textarea:true},{id:\"skills\",label:\"Core Skills & Competencies\",placeholder:\"List your core skills (comma-separated)\",textarea:true},{id:\"interest\",label:\"Why You're Interested in the Role\",placeholder:\"Explain your interest in this job\",textarea:true},{id:\"valueProposition\",label:\"Your Unique Value Proposition\",placeholder:\"Describe what makes you a great fit\",textarea:true},{id:\"additionalInfo\",label:\"Additional Information (Optional)\",placeholder:\"Any extra details to include\",textarea:true}].map(_ref=>{let{id,label,placeholder,textarea}=_ref;return/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:id,children:label}),textarea?/*#__PURE__*/_jsx(\"textarea\",{id:id,name:id,placeholder:placeholder,onChange:handleChange}):/*#__PURE__*/_jsx(\"input\",{id:id,type:\"text\",name:id,placeholder:placeholder,onChange:handleChange})]},id);}),/*#__PURE__*/_jsx(\"button\",{className:`generate-btn ${loading?\"loading\":\"\"}`,onClick:generateCoverLetter,disabled:loading,children:loading?\"Generating...\":\"Generate Cover Letter\"})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),coverLetter&&/*#__PURE__*/_jsxs(\"div\",{className:\"cover-letter-output\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Generated Cover Letter\"}),/*#__PURE__*/_jsx(\"pre\",{children:coverLetter}),/*#__PURE__*/_jsx(\"button\",{className:\"download-btn\",onClick:downloadCoverLetter,children:\"Download Cover Letter\"})]})]});};export default CoverLetterGenerator;","map":{"version":3,"names":["React","useState","saveAs","jsx","_jsx","jsxs","_jsxs","CoverLetterGenerator","formData","setFormData","fullName","jobTitle","company","hiringManager","experience","achievements","skills","interest","valueProposition","additionalInfo","loading","setLoading","coverLetter","setCoverLetter","error","setError","handleChange","e","target","name","value","generateCoverLetter","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","data","err","console","message","downloadCoverLetter","blob","Blob","type","className","children","id","label","placeholder","textarea","map","_ref","htmlFor","onChange","onClick","disabled"],"sources":["C:/jobHunt/src/components/coverLetterGenerator.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { saveAs } from \"file-saver\";\r\nimport \"../css/coverLetterGenerator.css\";\r\n\r\nconst CoverLetterGenerator = () => {\r\n  const [formData, setFormData] = useState({\r\n    fullName: \"\",\r\n    jobTitle: \"\",\r\n    company: \"\",\r\n    hiringManager: \"\",\r\n    experience: \"\",\r\n    achievements: \"\",\r\n    skills: \"\",\r\n    interest: \"\",\r\n    valueProposition: \"\",\r\n    additionalInfo: \"\"\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [coverLetter, setCoverLetter] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const generateCoverLetter = async () => {\r\n    setLoading(true);\r\n    setCoverLetter(\"\");\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/generateCoverLetter\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          fullName: formData.fullName,\r\n          jobTitle: formData.jobTitle,\r\n          company: formData.company,\r\n          hiringManager: formData.hiringManager,\r\n          experience: formData.experience,\r\n          achievements: formData.achievements,\r\n          skills: formData.skills,\r\n          interest: formData.interest,\r\n          valueProposition: formData.valueProposition,\r\n          additionalInfo: formData.additionalInfo\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Something went wrong with the request\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setCoverLetter(data.coverLetter);\r\n    } catch (err) {\r\n      console.error(\"Request failed:\", err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const downloadCoverLetter = () => {\r\n    if (coverLetter) {\r\n      const blob = new Blob([coverLetter], { type: \"text/plain;charset=utf-8\" });\r\n      saveAs(blob, \"coverLetter.txt\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cover-letter-generator-container\">\r\n      <h2>AI Cover Letter Generator</h2>\r\n\r\n      <div className=\"form-container\">\r\n        {[\r\n          { id: \"fullName\", label: \"Your Full Name\", placeholder: \"Enter your full name\" },\r\n          { id: \"jobTitle\", label: \"Job Title\", placeholder: \"Enter the job title\" },\r\n          { id: \"company\", label: \"Company Name\", placeholder: \"Enter the company name\" },\r\n          { id: \"hiringManager\", label: \"Hiring Manager (Optional)\", placeholder: \"Enter hiring manager's name\" },\r\n          { id: \"experience\", label: \"Relevant Work Experience\", placeholder: \"Describe your relevant experience\", textarea: true },\r\n          { id: \"achievements\", label: \"Key Achievements\", placeholder: \"List your achievements\", textarea: true },\r\n          { id: \"skills\", label: \"Core Skills & Competencies\", placeholder: \"List your core skills (comma-separated)\", textarea: true },\r\n          { id: \"interest\", label: \"Why You're Interested in the Role\", placeholder: \"Explain your interest in this job\", textarea: true },\r\n          { id: \"valueProposition\", label: \"Your Unique Value Proposition\", placeholder: \"Describe what makes you a great fit\", textarea: true },\r\n          { id: \"additionalInfo\", label: \"Additional Information (Optional)\", placeholder: \"Any extra details to include\", textarea: true }\r\n        ].map(({ id, label, placeholder, textarea }) => (\r\n          <div className=\"input-container\" key={id}>\r\n            <label htmlFor={id}>{label}</label>\r\n            {textarea ? (\r\n              <textarea id={id} name={id} placeholder={placeholder} onChange={handleChange} />\r\n            ) : (\r\n              <input id={id} type=\"text\" name={id} placeholder={placeholder} onChange={handleChange} />\r\n            )}\r\n          </div>\r\n        ))}\r\n\r\n        <button\r\n          className={`generate-btn ${loading ? \"loading\" : \"\"}`}\r\n          onClick={generateCoverLetter}\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"Generating...\" : \"Generate Cover Letter\"}\r\n        </button>\r\n      </div>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      {coverLetter && (\r\n        <div className=\"cover-letter-output\">\r\n          <h3>Generated Cover Letter</h3>\r\n          <pre>{coverLetter}</pre>\r\n          <button className=\"download-btn\" onClick={downloadCoverLetter}>\r\n            Download Cover Letter\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoverLetterGenerator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}