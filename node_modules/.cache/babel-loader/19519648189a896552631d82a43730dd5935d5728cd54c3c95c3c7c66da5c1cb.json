{"ast":null,"code":"var _jsxFileName = \"C:\\\\jobHunt\\\\jobhunt\\\\src\\\\components\\\\coverLetterGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { saveAs } from \"file-saver\";\nimport \"../css/coverLetterGenerator.css\"; // Ensure you have corresponding CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoverLetterGenerator = () => {\n  _s();\n  // Form fields: name, jobTitle, company, experience, skills, and additionalInfo (optional)\n  const [formData, setFormData] = useState({\n    name: \"\",\n    jobTitle: \"\",\n    company: \"\",\n    experience: \"\",\n    skills: \"\",\n    additionalInfo: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [coverLetter, setCoverLetter] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Update state when input changes\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Generate cover letter by calling the backend endpoint\n  const generateCoverLetter = async () => {\n    setLoading(true);\n    setCoverLetter(\"\");\n    setError(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/api/generateCoverLetter\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(formData)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Something went wrong with the request\");\n      }\n      const data = await response.json();\n      setCoverLetter(data.coverLetter);\n    } catch (err) {\n      console.error(\"Request failed:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Download the generated cover letter as a text file\n  const downloadCoverLetter = () => {\n    if (coverLetter) {\n      const blob = new Blob([coverLetter], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      saveAs(blob, \"coverLetter.txt\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cover-letter-generator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Cover Letter Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Your Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          type: \"text\",\n          name: \"name\",\n          placeholder: \"Enter your name\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"jobTitle\",\n          children: \"Job Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"jobTitle\",\n          type: \"text\",\n          name: \"jobTitle\",\n          placeholder: \"Enter the job title\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"company\",\n          children: \"Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"company\",\n          type: \"text\",\n          name: \"company\",\n          placeholder: \"Enter the company name\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"experience\",\n          children: \"Work Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"experience\",\n          name: \"experience\",\n          placeholder: \"Describe your work experience\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"skills\",\n          children: \"Skills\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"skills\",\n          name: \"skills\",\n          placeholder: \"List your skills (comma-separated)\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"additionalInfo\",\n          children: \"Additional Information (Optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"additionalInfo\",\n          name: \"additionalInfo\",\n          placeholder: \"Any additional details you'd like to include\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `generate-btn ${loading ? \"loading\" : \"\"}`,\n        onClick: generateCoverLetter,\n        disabled: loading,\n        children: loading ? \"Generating...\" : \"Generate Cover Letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }, this), coverLetter && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cover-letter-output\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Cover Letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: coverLetter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-btn\",\n        onClick: downloadCoverLetter,\n        children: \"Download Cover Letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(CoverLetterGenerator, \"tQ95cg/7iikX1Kks2MjQft9O9VA=\");\n_c = CoverLetterGenerator;\nexport default CoverLetterGenerator;\nvar _c;\n$RefreshReg$(_c, \"CoverLetterGenerator\");","map":{"version":3,"names":["React","useState","saveAs","jsxDEV","_jsxDEV","CoverLetterGenerator","_s","formData","setFormData","name","jobTitle","company","experience","skills","additionalInfo","loading","setLoading","coverLetter","setCoverLetter","error","setError","handleChange","e","target","value","generateCoverLetter","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","data","err","console","message","downloadCoverLetter","blob","Blob","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","placeholder","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/jobHunt/jobhunt/src/components/coverLetterGenerator.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { saveAs } from \"file-saver\";\r\nimport \"../css/coverLetterGenerator.css\"; // Ensure you have corresponding CSS\r\n\r\nconst CoverLetterGenerator = () => {\r\n  // Form fields: name, jobTitle, company, experience, skills, and additionalInfo (optional)\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    jobTitle: \"\",\r\n    company: \"\",\r\n    experience: \"\",\r\n    skills: \"\",\r\n    additionalInfo: \"\"\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [coverLetter, setCoverLetter] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Update state when input changes\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Generate cover letter by calling the backend endpoint\r\n  const generateCoverLetter = async () => {\r\n    setLoading(true);\r\n    setCoverLetter(\"\");\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/generateCoverLetter\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(formData)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Something went wrong with the request\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setCoverLetter(data.coverLetter);\r\n    } catch (err) {\r\n      console.error(\"Request failed:\", err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Download the generated cover letter as a text file\r\n  const downloadCoverLetter = () => {\r\n    if (coverLetter) {\r\n      const blob = new Blob([coverLetter], { type: \"text/plain;charset=utf-8\" });\r\n      saveAs(blob, \"coverLetter.txt\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cover-letter-generator-container\">\r\n      <h2>AI Cover Letter Generator</h2>\r\n\r\n      <div className=\"form-container\">\r\n        <div className=\"input-container\">\r\n          <label htmlFor=\"name\">Your Name</label>\r\n          <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Enter your name\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <label htmlFor=\"jobTitle\">Job Title</label>\r\n          <input\r\n            id=\"jobTitle\"\r\n            type=\"text\"\r\n            name=\"jobTitle\"\r\n            placeholder=\"Enter the job title\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <label htmlFor=\"company\">Company</label>\r\n          <input\r\n            id=\"company\"\r\n            type=\"text\"\r\n            name=\"company\"\r\n            placeholder=\"Enter the company name\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <label htmlFor=\"experience\">Work Experience</label>\r\n          <textarea\r\n            id=\"experience\"\r\n            name=\"experience\"\r\n            placeholder=\"Describe your work experience\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <label htmlFor=\"skills\">Skills</label>\r\n          <textarea\r\n            id=\"skills\"\r\n            name=\"skills\"\r\n            placeholder=\"List your skills (comma-separated)\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"input-container\">\r\n          <label htmlFor=\"additionalInfo\">Additional Information (Optional)</label>\r\n          <textarea\r\n            id=\"additionalInfo\"\r\n            name=\"additionalInfo\"\r\n            placeholder=\"Any additional details you'd like to include\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          className={`generate-btn ${loading ? \"loading\" : \"\"}`}\r\n          onClick={generateCoverLetter}\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"Generating...\" : \"Generate Cover Letter\"}\r\n        </button>\r\n      </div>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      {coverLetter && (\r\n        <div className=\"cover-letter-output\">\r\n          <h3>Generated Cover Letter</h3>\r\n          <pre>{coverLetter}</pre>\r\n          <button className=\"download-btn\" onClick={downloadCoverLetter}>\r\n            Download Cover Letter\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoverLetterGenerator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}