{"ast":null,"code":"var _jsxFileName = \"C:\\\\jobHunt\\\\jobhunt\\\\src\\\\components\\\\authContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authUser, setAuthUser] = useState(null);\n  useEffect(() => {\n    // Listen for changes in the authentication state\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setAuthUser(user); // Update state when auth state changes\n    });\n    return () => unsubscribe(); // Clean up the listener when the component unmounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"YxVw9TU5ODvqH+1M0uCNLGu6fq4=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n}; // Custom hook to access auth context\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","onAuthStateChanged","auth","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authUser","setAuthUser","unsubscribe","user","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/jobHunt/jobhunt/src/components/authContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { auth } from \"./firebase\";\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authUser, setAuthUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Listen for changes in the authentication state\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setAuthUser(user); // Update state when auth state changes\r\n    });\r\n\r\n    return () => unsubscribe(); // Clean up the listener when the component unmounts\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext); // Custom hook to access auth context\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtE,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,IAAI,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACA,MAAMY,WAAW,GAAGV,kBAAkB,CAACC,IAAI,EAAGU,IAAI,IAAK;MACrDF,WAAW,CAACE,IAAI,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;IAEF,OAAO,MAAMD,WAAW,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACC,WAAW,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL;IAAS,CAAE;IAAAF,QAAA,EACvCA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACV,EAAA,CAjBWF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAmBzB,OAAO,MAAMc,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvB,UAAU,CAACO,WAAW,CAAC;AAAA,EAAC,CAAC;AAAAgB,GAAA,CAAzCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}