{"ast":null,"code":"var _jsxFileName = \"C:\\\\jobHunt\\\\jobhunt\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { signInWithRedirect, GoogleAuthProvider, getRedirectResult, signOut } from \"firebase/auth\";\nimport { auth } from \"./firebase\"; // Assuming your Firebase setup\nimport { useNavigate } from \"react-router-dom\"; // Importing useNavigate from react-router-dom\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst provider = new GoogleAuthProvider();\nconst Login = () => {\n  _s();\n  const navigate = useNavigate(); // Initialize useNavigate hook to navigate programmatically\n\n  // Sign out to ensure the user starts from a clean session\n  const signOutUser = async () => {\n    try {\n      await signOut(auth); // Sign out the user if already signed in\n    } catch (error) {\n      console.error(\"Error signing out:\", error);\n    }\n  };\n  const handleLogin = async () => {\n    try {\n      // Sign out before redirect to make sure there's no active session\n      await signOutUser();\n\n      // Use redirect method to avoid popup issues\n      await signInWithRedirect(auth, provider);\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  };\n  useEffect(() => {\n    const handleRedirectResult = async () => {\n      try {\n        const result = await getRedirectResult(auth);\n        if (result) {\n          // User logged in successfully, handle redirect\n          navigate(\"/dashboard\");\n        } else {\n          console.log(\"No result found.\");\n        }\n      } catch (error) {\n        console.error(\"Error in redirect result:\", error);\n      }\n    };\n    handleRedirectResult();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      marginTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","signInWithRedirect","GoogleAuthProvider","getRedirectResult","signOut","auth","useNavigate","jsxDEV","_jsxDEV","provider","Login","_s","navigate","signOutUser","error","console","handleLogin","handleRedirectResult","result","log","style","textAlign","marginTop","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/jobHunt/jobhunt/src/components/login.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { signInWithRedirect, GoogleAuthProvider, getRedirectResult, signOut } from \"firebase/auth\";\r\nimport { auth } from \"./firebase\"; // Assuming your Firebase setup\r\nimport { useNavigate } from \"react-router-dom\";  // Importing useNavigate from react-router-dom\r\n\r\nconst provider = new GoogleAuthProvider();\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate(); // Initialize useNavigate hook to navigate programmatically\r\n\r\n  // Sign out to ensure the user starts from a clean session\r\n  const signOutUser = async () => {\r\n    try {\r\n      await signOut(auth); // Sign out the user if already signed in\r\n    } catch (error) {\r\n      console.error(\"Error signing out:\", error);\r\n    }\r\n  };\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      // Sign out before redirect to make sure there's no active session\r\n      await signOutUser();\r\n\r\n      // Use redirect method to avoid popup issues\r\n      await signInWithRedirect(auth, provider);\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleRedirectResult = async () => {\r\n      try {\r\n        const result = await getRedirectResult(auth);\r\n        if (result) {\r\n          // User logged in successfully, handle redirect\r\n          navigate(\"/dashboard\");\r\n        } else {\r\n          console.log(\"No result found.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error in redirect result:\", error);\r\n      }\r\n    };\r\n    handleRedirectResult();\r\n  }, [navigate]);\r\n  \r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\", marginTop: \"50px\" }}>\r\n      <h2>Login</h2>\r\n      <button onClick={handleLogin}>Sign in with Google</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,kBAAkB,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,OAAO,QAAQ,eAAe;AAClG,SAASC,IAAI,QAAQ,YAAY,CAAC,CAAC;AACnC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAG,IAAIP,kBAAkB,CAAC,CAAC;AAEzC,MAAMQ,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMO,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMT,OAAO,CAACC,IAAI,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,MAAME,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF;MACA,MAAMH,WAAW,CAAC,CAAC;;MAEnB;MACA,MAAMZ,kBAAkB,CAACI,IAAI,EAAEI,QAAQ,CAAC;IAC1C,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACvC;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMiB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;MACvC,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMf,iBAAiB,CAACE,IAAI,CAAC;QAC5C,IAAIa,MAAM,EAAE;UACV;UACAN,QAAQ,CAAC,YAAY,CAAC;QACxB,CAAC,MAAM;UACLG,OAAO,CAACI,GAAG,CAAC,kBAAkB,CAAC;QACjC;MACF,CAAC,CAAC,OAAOL,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IACDG,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAGd,oBACEJ,OAAA;IAAKY,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACrDf,OAAA;MAAAe,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdnB,OAAA;MAAQoB,OAAO,EAAEZ,WAAY;MAAAO,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV,CAAC;AAAChB,EAAA,CAhDID,KAAK;EAAA,QACQJ,WAAW;AAAA;AAAAuB,EAAA,GADxBnB,KAAK;AAkDX,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}