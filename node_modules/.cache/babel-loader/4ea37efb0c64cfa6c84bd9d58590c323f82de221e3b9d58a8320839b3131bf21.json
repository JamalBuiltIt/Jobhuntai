{"ast":null,"code":"var _jsxFileName = \"C:\\\\jobHunt\\\\jobhunt\\\\src\\\\components\\\\resumeGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { saveAs } from \"file-saver\";\nimport \"../css/resume.Generator.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResumeGenerator = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    name: \"\",\n    jobTitle: \"\",\n    experience: \"\",\n    education: \"\",\n    skills: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [generatedResume, setGeneratedResume] = useState(\"\");\n  const handleChange = e => {\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const generateResume = async () => {\n    setLoading(true);\n    setGeneratedResume(\"\");\n    const prompt = `\n    Create a professional resume for ${userData.name}, applying for ${userData.jobTitle}.\n    Experience: ${userData.experience}.\n    Education: ${userData.education}.\n    Skills: ${userData.skills}.\n    Format it properly with sections: Summary, Experience, Education, and Skills.\n    `;\n    try {\n      const response = await fetch(\"https://api.openai.com/v1/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.NEXT_PUBLIC_OPENAI_API_KEY}`\n        },\n        body: JSON.stringify({\n          model: \"gpt-4\",\n          prompt,\n          max_tokens: 500\n        })\n      });\n      const data = await response.json();\n      setGeneratedResume(data.choices[0].text.trim());\n    } catch (error) {\n      console.error(\"Error generating resume:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const downloadResume = () => {\n    const blob = new Blob([generatedResume], {\n      type: \"text/plain;charset=utf-8\"\n    });\n    saveAs(blob, \"resume.txt\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\",\n      maxWidth: \"600px\",\n      margin: \"auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Resume Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Your Name\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"jobTitle\",\n      placeholder: \"Job Title\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"experience\",\n      placeholder: \"Work Experience\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"education\",\n      placeholder: \"Education\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"skills\",\n      placeholder: \"Skills (comma-separated)\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateResume,\n      disabled: loading,\n      children: loading ? \"Generating...\" : \"Generate Resume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), generatedResume && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: generatedResume\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: downloadResume,\n        children: \"Download Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ResumeGenerator, \"UyUg6xeX2Uyjendjngl3hU3zEE0=\");\n_c = ResumeGenerator;\nexport default ResumeGenerator;\nvar _c;\n$RefreshReg$(_c, \"ResumeGenerator\");","map":{"version":3,"names":["React","useState","saveAs","jsxDEV","_jsxDEV","ResumeGenerator","_s","userData","setUserData","name","jobTitle","experience","education","skills","loading","setLoading","generatedResume","setGeneratedResume","handleChange","e","target","value","generateResume","prompt","response","fetch","method","headers","Authorization","process","env","NEXT_PUBLIC_OPENAI_API_KEY","body","JSON","stringify","model","max_tokens","data","json","choices","text","trim","error","console","downloadResume","blob","Blob","type","style","padding","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/jobHunt/jobhunt/src/components/resumeGenerator.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { saveAs } from \"file-saver\";\r\nimport \"../css/resume.Generator.css\"\r\n\r\nconst ResumeGenerator = () => {\r\n  const [userData, setUserData] = useState({\r\n    name: \"\",\r\n    jobTitle: \"\",\r\n    experience: \"\",\r\n    education: \"\",\r\n    skills: \"\",\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [generatedResume, setGeneratedResume] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setUserData({ ...userData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const generateResume = async () => {\r\n    setLoading(true);\r\n    setGeneratedResume(\"\");\r\n\r\n    const prompt = `\r\n    Create a professional resume for ${userData.name}, applying for ${userData.jobTitle}.\r\n    Experience: ${userData.experience}.\r\n    Education: ${userData.education}.\r\n    Skills: ${userData.skills}.\r\n    Format it properly with sections: Summary, Experience, Education, and Skills.\r\n    `;\r\n\r\n    try {\r\n      const response = await fetch(\"https://api.openai.com/v1/completions\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${process.env.NEXT_PUBLIC_OPENAI_API_KEY}`,\r\n        },\r\n        body: JSON.stringify({\r\n          model: \"gpt-4\",\r\n          prompt,\r\n          max_tokens: 500,\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setGeneratedResume(data.choices[0].text.trim());\r\n    } catch (error) {\r\n      console.error(\"Error generating resume:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const downloadResume = () => {\r\n    const blob = new Blob([generatedResume], { type: \"text/plain;charset=utf-8\" });\r\n    saveAs(blob, \"resume.txt\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\", maxWidth: \"600px\", margin: \"auto\" }}>\r\n      <h2>AI Resume Generator</h2>\r\n      <input type=\"text\" name=\"name\" placeholder=\"Your Name\" onChange={handleChange} />\r\n      <input type=\"text\" name=\"jobTitle\" placeholder=\"Job Title\" onChange={handleChange} />\r\n      <textarea name=\"experience\" placeholder=\"Work Experience\" onChange={handleChange} />\r\n      <textarea name=\"education\" placeholder=\"Education\" onChange={handleChange} />\r\n      <textarea name=\"skills\" placeholder=\"Skills (comma-separated)\" onChange={handleChange} />\r\n\r\n      <button onClick={generateResume} disabled={loading}>\r\n        {loading ? \"Generating...\" : \"Generate Resume\"}\r\n      </button>\r\n\r\n      {generatedResume && (\r\n        <div>\r\n          <h3>Generated Resume</h3>\r\n          <pre>{generatedResume}</pre>\r\n          <button onClick={downloadResume}>Download Resume</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResumeGenerator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}