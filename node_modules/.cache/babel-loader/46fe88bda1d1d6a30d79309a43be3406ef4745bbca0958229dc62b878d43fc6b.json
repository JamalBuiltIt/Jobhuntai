{"ast":null,"code":"var _jsxFileName = \"C:\\\\jobHunt\\\\src\\\\components\\\\coverLetterGenerator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { saveAs } from \"file-saver\";\nimport \"../css/coverLetterGenerator.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CoverLetterGenerator = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    fullName: \"\",\n    jobTitle: \"\",\n    company: \"\",\n    hiringManager: \"\",\n    experience: \"\",\n    achievements: \"\",\n    skills: \"\",\n    interest: \"\",\n    valueProposition: \"\",\n    additionalInfo: \"\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [coverLetter, setCoverLetter] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const generateCoverLetter = async () => {\n    setLoading(true);\n    setCoverLetter(\"\");\n    setError(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/api/generateCoverLetter\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          fullName: formData.fullName,\n          jobTitle: formData.jobTitle,\n          company: formData.company,\n          hiringManager: formData.hiringManager,\n          experience: formData.experience,\n          achievements: formData.achievements,\n          skills: formData.skills,\n          interest: formData.interest,\n          valueProposition: formData.valueProposition,\n          additionalInfo: formData.additionalInfo\n        })\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Something went wrong with the request\");\n      }\n      const data = await response.json();\n      setCoverLetter(data.coverLetter);\n    } catch (err) {\n      console.error(\"Request failed:\", err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const downloadCoverLetter = () => {\n    if (coverLetter) {\n      const blob = new Blob([coverLetter], {\n        type: \"text/plain;charset=utf-8\"\n      });\n      saveAs(blob, \"coverLetter.txt\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cover-letter-generator-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AI Cover Letter Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [[{\n        id: \"fullName\",\n        label: \"Your Full Name\",\n        placeholder: \"Enter your full name\"\n      }, {\n        id: \"jobTitle\",\n        label: \"Job Title\",\n        placeholder: \"Enter the job title\"\n      }, {\n        id: \"company\",\n        label: \"Company Name\",\n        placeholder: \"Enter the company name\"\n      }, {\n        id: \"hiringManager\",\n        label: \"Hiring Manager (Optional)\",\n        placeholder: \"Enter hiring manager's name\"\n      }, {\n        id: \"experience\",\n        label: \"Relevant Work Experience\",\n        placeholder: \"Describe your relevant experience\",\n        textarea: true\n      }, {\n        id: \"achievements\",\n        label: \"Key Achievements\",\n        placeholder: \"List your achievements\",\n        textarea: true\n      }, {\n        id: \"skills\",\n        label: \"Core Skills & Competencies\",\n        placeholder: \"List your core skills (comma-separated)\",\n        textarea: true\n      }, {\n        id: \"interest\",\n        label: \"Why You're Interested in the Role\",\n        placeholder: \"Explain your interest in this job\",\n        textarea: true\n      }, {\n        id: \"valueProposition\",\n        label: \"Your Unique Value Proposition\",\n        placeholder: \"Describe what makes you a great fit\",\n        textarea: true\n      }, {\n        id: \"additionalInfo\",\n        label: \"Additional Information (Optional)\",\n        placeholder: \"Any extra details to include\",\n        textarea: true\n      }].map(({\n        id,\n        label,\n        placeholder,\n        textarea\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: id,\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), textarea ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: id,\n          name: id,\n          placeholder: placeholder,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n          id: id,\n          type: \"text\",\n          name: id,\n          placeholder: placeholder,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `generate-btn ${loading ? \"loading\" : \"\"}`,\n        onClick: generateCoverLetter,\n        disabled: loading,\n        children: loading ? \"Generating...\" : \"Generate Cover Letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), coverLetter && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cover-letter-output\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Cover Letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: coverLetter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"download-btn\",\n        onClick: downloadCoverLetter,\n        children: \"Download Cover Letter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(CoverLetterGenerator, \"GzMNW+rhm6Tf0EJR1o5HI/kyrGs=\");\n_c = CoverLetterGenerator;\nexport default CoverLetterGenerator;\nvar _c;\n$RefreshReg$(_c, \"CoverLetterGenerator\");","map":{"version":3,"names":["React","useState","saveAs","jsxDEV","_jsxDEV","CoverLetterGenerator","_s","formData","setFormData","fullName","jobTitle","company","hiringManager","experience","achievements","skills","interest","valueProposition","additionalInfo","loading","setLoading","coverLetter","setCoverLetter","error","setError","handleChange","e","target","name","value","generateCoverLetter","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","data","err","console","message","downloadCoverLetter","blob","Blob","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","label","placeholder","textarea","map","htmlFor","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/jobHunt/src/components/coverLetterGenerator.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { saveAs } from \"file-saver\";\r\nimport \"../css/coverLetterGenerator.css\";\r\n\r\nconst CoverLetterGenerator = () => {\r\n  const [formData, setFormData] = useState({\r\n    fullName: \"\",\r\n    jobTitle: \"\",\r\n    company: \"\",\r\n    hiringManager: \"\",\r\n    experience: \"\",\r\n    achievements: \"\",\r\n    skills: \"\",\r\n    interest: \"\",\r\n    valueProposition: \"\",\r\n    additionalInfo: \"\"\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [coverLetter, setCoverLetter] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const generateCoverLetter = async () => {\r\n    setLoading(true);\r\n    setCoverLetter(\"\");\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/generateCoverLetter\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({\r\n          fullName: formData.fullName,\r\n          jobTitle: formData.jobTitle,\r\n          company: formData.company,\r\n          hiringManager: formData.hiringManager,\r\n          experience: formData.experience,\r\n          achievements: formData.achievements,\r\n          skills: formData.skills,\r\n          interest: formData.interest,\r\n          valueProposition: formData.valueProposition,\r\n          additionalInfo: formData.additionalInfo\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.error || \"Something went wrong with the request\");\r\n      }\r\n\r\n      const data = await response.json();\r\n      setCoverLetter(data.coverLetter);\r\n    } catch (err) {\r\n      console.error(\"Request failed:\", err);\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const downloadCoverLetter = () => {\r\n    if (coverLetter) {\r\n      const blob = new Blob([coverLetter], { type: \"text/plain;charset=utf-8\" });\r\n      saveAs(blob, \"coverLetter.txt\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cover-letter-generator-container\">\r\n      <h2>AI Cover Letter Generator</h2>\r\n\r\n      <div className=\"form-container\">\r\n        {[\r\n          { id: \"fullName\", label: \"Your Full Name\", placeholder: \"Enter your full name\" },\r\n          { id: \"jobTitle\", label: \"Job Title\", placeholder: \"Enter the job title\" },\r\n          { id: \"company\", label: \"Company Name\", placeholder: \"Enter the company name\" },\r\n          { id: \"hiringManager\", label: \"Hiring Manager (Optional)\", placeholder: \"Enter hiring manager's name\" },\r\n          { id: \"experience\", label: \"Relevant Work Experience\", placeholder: \"Describe your relevant experience\", textarea: true },\r\n          { id: \"achievements\", label: \"Key Achievements\", placeholder: \"List your achievements\", textarea: true },\r\n          { id: \"skills\", label: \"Core Skills & Competencies\", placeholder: \"List your core skills (comma-separated)\", textarea: true },\r\n          { id: \"interest\", label: \"Why You're Interested in the Role\", placeholder: \"Explain your interest in this job\", textarea: true },\r\n          { id: \"valueProposition\", label: \"Your Unique Value Proposition\", placeholder: \"Describe what makes you a great fit\", textarea: true },\r\n          { id: \"additionalInfo\", label: \"Additional Information (Optional)\", placeholder: \"Any extra details to include\", textarea: true }\r\n        ].map(({ id, label, placeholder, textarea }) => (\r\n          <div className=\"input-container\" key={id}>\r\n            <label htmlFor={id}>{label}</label>\r\n            {textarea ? (\r\n              <textarea id={id} name={id} placeholder={placeholder} onChange={handleChange} />\r\n            ) : (\r\n              <input id={id} type=\"text\" name={id} placeholder={placeholder} onChange={handleChange} />\r\n            )}\r\n          </div>\r\n        ))}\r\n\r\n        <button\r\n          className={`generate-btn ${loading ? \"loading\" : \"\"}`}\r\n          onClick={generateCoverLetter}\r\n          disabled={loading}\r\n        >\r\n          {loading ? \"Generating...\" : \"Generate Cover Letter\"}\r\n        </button>\r\n      </div>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      {coverLetter && (\r\n        <div className=\"cover-letter-output\">\r\n          <h3>Generated Cover Letter</h3>\r\n          <pre>{coverLetter}</pre>\r\n          <button className=\"download-btn\" onClick={downloadCoverLetter}>\r\n            Download Cover Letter\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CoverLetterGenerator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}